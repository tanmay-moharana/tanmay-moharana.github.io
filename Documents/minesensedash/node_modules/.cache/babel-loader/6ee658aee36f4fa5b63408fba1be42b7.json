{"ast":null,"code":"import axios from'axios';// Gets the logged in user data from local session \nvar getLoggedInUser=function getLoggedInUser(){var user=localStorage.getItem('authUser');if(user)return JSON.parse(user);return null;};//is user is logged in\nvar isUserAuthenticated=function isUserAuthenticated(){return getLoggedInUser()!==null;};// Register Method\nvar postRegister=function postRegister(url,data){return axios.post(url,data).then(function(response){if(response.status>=200||response.status<=299)return response.data;throw response.data;}).catch(function(err){var message;if(err.response&&err.response.status){switch(err.response.status){case 404:message=\"Sorry! the page you are looking for could not be found\";break;case 500:message=\"Sorry! something went wrong, please contact our support team\";break;case 401:message=\"Invalid credentials\";break;default:message=err[1];break;}}throw message;});};// Login Method\nvar postLogin=function postLogin(url,data){return axios.post(url,data).then(function(response){if(response.status===400||response.status===500)throw response.data;return response.data;}).catch(function(err){throw err[1];});};// postForgetPwd \nvar postForgetPwd=function postForgetPwd(url,data){return axios.post(url,data).then(function(response){if(response.status===400||response.status===500)throw response.data;return response.data;}).catch(function(err){throw err[1];});};export{getLoggedInUser,isUserAuthenticated,postRegister,postLogin,postForgetPwd};","map":{"version":3,"sources":["/Users/tanmaymoharana/Documents/projects/industrial/dashboard/src/helpers/fackBackend_Helper.js"],"names":["axios","getLoggedInUser","user","localStorage","getItem","JSON","parse","isUserAuthenticated","postRegister","url","data","post","then","response","status","catch","err","message","postLogin","postForgetPwd"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1B,GAAMC,CAAAA,IAAI,CAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAb,CACA,GAAIF,IAAJ,CACI,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP,CACJ,MAAO,KAAP,CACH,CALD,CAOA;AACA,GAAMK,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAC9B,MAAON,CAAAA,eAAe,KAAO,IAA7B,CACH,CAFD,CAIA;AACA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,GAAD,CAAMC,IAAN,CAAe,CAChC,MAAOV,CAAAA,KAAK,CAACW,IAAN,CAAWF,GAAX,CAAgBC,IAAhB,EAAsBE,IAAtB,CAA2B,SAAAC,QAAQ,CAAI,CAC1C,GAAIA,QAAQ,CAACC,MAAT,EAAmB,GAAnB,EAA0BD,QAAQ,CAACC,MAAT,EAAmB,GAAjD,CACI,MAAOD,CAAAA,QAAQ,CAACH,IAAhB,CACJ,KAAMG,CAAAA,QAAQ,CAACH,IAAf,CACH,CAJM,EAIJK,KAJI,CAIE,SAAAC,GAAG,CAAI,CACZ,GAAIC,CAAAA,OAAJ,CACA,GAAID,GAAG,CAACH,QAAJ,EAAgBG,GAAG,CAACH,QAAJ,CAAaC,MAAjC,CAA0C,CACtC,OAAQE,GAAG,CAACH,QAAJ,CAAaC,MAArB,EACI,IAAK,IAAL,CAAUG,OAAO,CAAG,wDAAV,CAAoE,MAC9E,IAAK,IAAL,CAAUA,OAAO,CAAG,8DAAV,CAA0E,MACpF,IAAK,IAAL,CAAUA,OAAO,CAAG,qBAAV,CAAiC,MAC3C,QAASA,OAAO,CAAGD,GAAG,CAAC,CAAD,CAAb,CAAkB,MAJ/B,CAMH,CACD,KAAMC,CAAAA,OAAN,CACH,CAfM,CAAP,CAiBH,CAlBD,CAoBA;AACA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACT,GAAD,CAAMC,IAAN,CAAe,CAC7B,MAAOV,CAAAA,KAAK,CAACW,IAAN,CAAWF,GAAX,CAAgBC,IAAhB,EAAsBE,IAAtB,CAA2B,SAAAC,QAAQ,CAAI,CAC1C,GAAIA,QAAQ,CAACC,MAAT,GAAoB,GAApB,EAA2BD,QAAQ,CAACC,MAAT,GAAoB,GAAnD,CACI,KAAMD,CAAAA,QAAQ,CAACH,IAAf,CACJ,MAAOG,CAAAA,QAAQ,CAACH,IAAhB,CACH,CAJM,EAIJK,KAJI,CAIE,SAAAC,GAAG,CAAI,CACZ,KAAMA,CAAAA,GAAG,CAAC,CAAD,CAAT,CACH,CANM,CAAP,CAOH,CARD,CAUA;AACA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACV,GAAD,CAAMC,IAAN,CAAe,CACjC,MAAOV,CAAAA,KAAK,CAACW,IAAN,CAAWF,GAAX,CAAgBC,IAAhB,EAAsBE,IAAtB,CAA2B,SAAAC,QAAQ,CAAI,CAC1C,GAAIA,QAAQ,CAACC,MAAT,GAAoB,GAApB,EAA2BD,QAAQ,CAACC,MAAT,GAAoB,GAAnD,CACI,KAAMD,CAAAA,QAAQ,CAACH,IAAf,CACJ,MAAOG,CAAAA,QAAQ,CAACH,IAAhB,CACH,CAJM,EAIJK,KAJI,CAIE,SAAAC,GAAG,CAAI,CACZ,KAAMA,CAAAA,GAAG,CAAC,CAAD,CAAT,CACH,CANM,CAAP,CAOH,CARD,CAWA,OAASf,eAAT,CAA0BM,mBAA1B,CAA+CC,YAA/C,CAA6DU,SAA7D,CAAwEC,aAAxE","sourcesContent":["import axios from 'axios';\r\n\r\n// Gets the logged in user data from local session \r\nconst getLoggedInUser = () => {\r\n    const user = localStorage.getItem('authUser');\r\n    if (user)\r\n        return JSON.parse(user);\r\n    return null;\r\n}\r\n\r\n//is user is logged in\r\nconst isUserAuthenticated = () => {\r\n    return getLoggedInUser() !== null;\r\n}\r\n\r\n// Register Method\r\nconst postRegister = (url, data) => {\r\n    return axios.post(url, data).then(response => {\r\n        if (response.status >= 200 || response.status <= 299)\r\n            return response.data;\r\n        throw response.data;\r\n    }).catch(err => {\r\n        var message;\r\n        if (err.response && err.response.status ) {\r\n            switch (err.response.status) {\r\n                case 404: message = \"Sorry! the page you are looking for could not be found\"; break;\r\n                case 500: message = \"Sorry! something went wrong, please contact our support team\"; break;\r\n                case 401: message = \"Invalid credentials\"; break;\r\n                default: message = err[1]; break;\r\n            }\r\n        }\r\n        throw message;\r\n    });\r\n\r\n}\r\n\r\n// Login Method\r\nconst postLogin = (url, data) => {\r\n    return axios.post(url, data).then(response => {\r\n        if (response.status === 400 || response.status === 500)\r\n            throw response.data;\r\n        return response.data;\r\n    }).catch(err => {\r\n        throw err[1];\r\n    });\r\n}\r\n\r\n// postForgetPwd \r\nconst postForgetPwd = (url, data) => {\r\n    return axios.post(url, data).then(response => {\r\n        if (response.status === 400 || response.status === 500)\r\n            throw response.data;\r\n        return response.data;\r\n    }).catch(err => {\r\n        throw err[1];\r\n    });\r\n}\r\n\r\n\r\nexport { getLoggedInUser, isUserAuthenticated, postRegister, postLogin, postForgetPwd }"]},"metadata":{},"sourceType":"module"}