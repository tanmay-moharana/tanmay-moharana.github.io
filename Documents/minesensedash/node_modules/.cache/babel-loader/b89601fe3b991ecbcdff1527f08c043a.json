{"ast":null,"code":"import { takeEvery, fork, put, all, call } from 'redux-saga/effects'; //Account Redux states\n\nimport { REGISTER_USER } from './actionTypes';\nimport { registerUserSuccessful, registerUserFailed } from './actions'; //AUTH related methods\n\nimport { postRegister } from '../../../helpers/fackBackend_Helper';\nimport { getFirebaseBackend } from '../../../helpers/firebase_helper'; // initialize firebase Auth\n\nconst fireBaseBackend = getFirebaseBackend(); // Is user register successfull then direct plot user in redux.\n\nfunction* registerUser({\n  payload: {\n    user\n  }\n}) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.registerUser, user.email, user.password);\n      yield put(registerUserSuccessful(response));\n    } else {\n      const response = yield call(postRegister, '/post-register', user);\n      yield put(registerUserSuccessful(response));\n    }\n  } catch (error) {\n    yield put(registerUserFailed(error));\n  }\n}\n\nexport function* watchUserRegister() {\n  yield takeEvery(REGISTER_USER, registerUser);\n}\n\nfunction* accountSaga() {\n  yield all([fork(watchUserRegister)]);\n}\n\nexport default accountSaga;","map":{"version":3,"sources":["/Users/tanmaymoharana/Documents/projects/industrial/dashboard/src/store/auth/register/saga.js"],"names":["takeEvery","fork","put","all","call","REGISTER_USER","registerUserSuccessful","registerUserFailed","postRegister","getFirebaseBackend","fireBaseBackend","registerUser","payload","user","process","env","REACT_APP_DEFAULTAUTH","response","email","password","error","watchUserRegister","accountSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,QAAgD,oBAAhD,C,CAEA;;AACA,SAASC,aAAT,QAA8B,eAA9B;AACA,SAASC,sBAAT,EAAiCC,kBAAjC,QAA2D,WAA3D,C,CAEA;;AACA,SAASC,YAAT,QAA6B,qCAA7B;AACA,SAASC,kBAAT,QAAmC,kCAAnC,C,CAEA;;AACA,MAAMC,eAAe,GAAGD,kBAAkB,EAA1C,C,CAEA;;AACA,UAAUE,YAAV,CAAuB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF;AAAX,CAAvB,EAA8C;AAC1C,MAAI;AACA,QAAGC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,KAAsC,UAAzC,EAAoD;AAChD,YAAMC,QAAQ,GAAG,MAAMb,IAAI,CAACM,eAAe,CAACC,YAAjB,EAA+BE,IAAI,CAACK,KAApC,EAA2CL,IAAI,CAACM,QAAhD,CAA3B;AACA,YAAMjB,GAAG,CAACI,sBAAsB,CAACW,QAAD,CAAvB,CAAT;AACH,KAHD,MAII;AACA,YAAMA,QAAQ,GAAG,MAAMb,IAAI,CAACI,YAAD,EAAe,gBAAf,EAAiCK,IAAjC,CAA3B;AACA,YAAMX,GAAG,CAACI,sBAAsB,CAACW,QAAD,CAAvB,CAAT;AACH;AACJ,GATD,CASE,OAAOG,KAAP,EAAc;AACZ,UAAMlB,GAAG,CAACK,kBAAkB,CAACa,KAAD,CAAnB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACjC,QAAMrB,SAAS,CAACK,aAAD,EAAgBM,YAAhB,CAAf;AACH;;AAED,UAAUW,WAAV,GAAwB;AACpB,QAAMnB,GAAG,CAAC,CAACF,IAAI,CAACoB,iBAAD,CAAL,CAAD,CAAT;AACH;;AAED,eAAeC,WAAf","sourcesContent":["import { takeEvery, fork, put, all, call } from 'redux-saga/effects';\r\n\r\n//Account Redux states\r\nimport { REGISTER_USER } from './actionTypes';\r\nimport { registerUserSuccessful, registerUserFailed } from './actions';\r\n\r\n//AUTH related methods\r\nimport { postRegister } from '../../../helpers/fackBackend_Helper';\r\nimport { getFirebaseBackend } from '../../../helpers/firebase_helper';\r\n\r\n// initialize firebase Auth\r\nconst fireBaseBackend = getFirebaseBackend();\r\n\r\n// Is user register successfull then direct plot user in redux.\r\nfunction* registerUser({ payload: { user } }) {\r\n    try {\r\n        if(process.env.REACT_APP_DEFAULTAUTH === \"firebase\"){\r\n            const response = yield call(fireBaseBackend.registerUser, user.email, user.password);\r\n            yield put(registerUserSuccessful(response));\r\n        }\r\n        else{\r\n            const response = yield call(postRegister, '/post-register', user);\r\n            yield put(registerUserSuccessful(response));\r\n        }\r\n    } catch (error) {\r\n        yield put(registerUserFailed(error));\r\n    }\r\n}\r\n\r\nexport function* watchUserRegister() {\r\n    yield takeEvery(REGISTER_USER, registerUser)\r\n}\r\n\r\nfunction* accountSaga() {\r\n    yield all([fork(watchUserRegister)]);\r\n}\r\n\r\nexport default accountSaga;"]},"metadata":{},"sourceType":"module"}