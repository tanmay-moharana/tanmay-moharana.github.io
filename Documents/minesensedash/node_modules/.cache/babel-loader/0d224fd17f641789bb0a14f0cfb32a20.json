{"ast":null,"code":"var _jsxFileName = \"/Users/tanmaymoharana/Documents/projects/industrial/dashboard/src/pages/Calendar/Calendar.js\";\nimport React, { Component } from 'react';\nimport { Container, Card, CardBody, Row, Col } from \"reactstrap\"; //Import Calendar\n\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport BootstrapTheme from '@fullcalendar/bootstrap';\nimport \"@fullcalendar/core/main.css\";\nimport \"@fullcalendar/daygrid/main.css\";\nimport \"@fullcalendar/bootstrap/main.css\"; //Import Breadcrumb\n\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDateClick = arg => {\n      var title = prompt('Event Title:');\n      this.setState({\n        selectedDay: arg\n      });\n\n      if (title == null) {} else {\n        var newEvent = {};\n        newEvent = {\n          id: this.state.calendarEvents.length + 1,\n          title: title,\n          start: this.state.selectedDay ? this.state.selectedDay.date : new Date(),\n          className: 'bg-primary'\n        };\n        this.setState({\n          calendarEvents: this.state.calendarEvents.concat(newEvent),\n          selectedDay: null\n        });\n      }\n    };\n\n    this.state = {\n      breadcrumbItems: [{\n        title: \"Nazox\",\n        link: \"#\"\n      }, {\n        title: \"Calendar\",\n        link: \"#\"\n      }],\n      calendarWeekends: true,\n      calendarEvents: [{\n        title: 'All Day Event',\n        start: new Date().setDate(1)\n      }, {\n        id: 999,\n        title: 'Long Event',\n        start: new Date().setDate(17),\n        end: new Date().setDate(19),\n        allDay: false\n      }, {\n        id: 999,\n        title: 'Repeating Event',\n        start: new Date().setDate(19),\n        allDay: false\n      }, {\n        id: 999,\n        title: 'Meeting',\n        start: new Date().setDate(22),\n        allDay: false\n      }, {\n        id: 999,\n        title: 'Lunch',\n        start: new Date().setDate(22),\n        allDay: false\n      }, {\n        title: 'Birthday Party',\n        start: new Date().setDate(23),\n        allDay: false\n      }, {\n        id: 999,\n        title: 'Repeating Event',\n        start: new Date().setDate(26),\n        allDay: false\n      }, {\n        id: 999,\n        title: 'Click for Google',\n        start: new Date().setDate(28),\n        allDay: false\n      }]\n    };\n    this.handleDateClick.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumbs, {\n      title: \"Calendar\",\n      breadcrumbItems: this.state.breadcrumbItems,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FullCalendar, {\n      defaultView: \"dayGridMonth\",\n      plugins: [BootstrapTheme, dayGridPlugin, interactionPlugin],\n      handleWindowResize: true,\n      themeSystem: \"bootstrap\",\n      header: {\n        left: \"prev,next today\",\n        center: \"title\",\n        right: \"dayGridMonth,dayGridWeek,dayGridDay\"\n      },\n      dateClick: this.handleDateClick,\n      editable: true,\n      droppable: true,\n      eventLimit: true,\n      selectable: true,\n      events: this.state.calendarEvents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        clear: \"both\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }\n    }))))))));\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/tanmaymoharana/Documents/projects/industrial/dashboard/src/pages/Calendar/Calendar.js"],"names":["React","Component","Container","Card","CardBody","Row","Col","FullCalendar","dayGridPlugin","interactionPlugin","BootstrapTheme","Breadcrumbs","Calendar","constructor","props","handleDateClick","arg","title","prompt","setState","selectedDay","newEvent","id","state","calendarEvents","length","start","date","Date","className","concat","breadcrumbItems","link","calendarWeekends","setDate","end","allDay","bind","render","left","center","right","clear"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Card, CardBody, Row, Col } from \"reactstrap\";\r\n\r\n//Import Calendar\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport BootstrapTheme from '@fullcalendar/bootstrap';\r\n\r\nimport \"@fullcalendar/core/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"@fullcalendar/bootstrap/main.css\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from '../../components/Common/Breadcrumb';\r\n\r\nclass Calendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            breadcrumbItems : [\r\n                { title : \"Nazox\", link : \"#\" },\r\n                { title : \"Calendar\", link : \"#\" },\r\n            ],\r\n            calendarWeekends: true,\r\n            calendarEvents: [\r\n                {\r\n                    title: 'All Day Event',\r\n                    start: new Date().setDate(1),\r\n                },\r\n                {\r\n                    id: 999,\r\n                    title: 'Long Event',\r\n                    start: new Date().setDate(17),\r\n                    end: new Date().setDate(19),\r\n                    allDay: false,\r\n                },\r\n                {\r\n                    id: 999,\r\n                    title: 'Repeating Event',\r\n                    start: new Date().setDate(19),\r\n                    allDay: false,\r\n                },\r\n                {\r\n                    id: 999,\r\n                    title: 'Meeting',\r\n                    start: new Date().setDate(22),\r\n                    allDay: false,\r\n                },\r\n                {\r\n                    id: 999,\r\n                    title: 'Lunch',\r\n                    start: new Date().setDate(22),\r\n                    allDay: false,\r\n                },\r\n                {\r\n                    title: 'Birthday Party',\r\n                    start: new Date().setDate(23),\r\n                    allDay: false,\r\n                },\r\n                {\r\n                    id: 999,\r\n                    title: 'Repeating Event',\r\n                    start: new Date().setDate(26),\r\n                    allDay: false,\r\n                },\r\n                {\r\n                    id: 999,\r\n                    title: 'Click for Google',\r\n                    start: new Date().setDate(28),\r\n                    allDay: false,\r\n                },\r\n            ]\r\n        }\r\n        this.handleDateClick.bind(this);\r\n    }\r\n    \r\n    handleDateClick = (arg) => {\r\n        var title = prompt('Event Title:');\r\n        this.setState({ selectedDay: arg });\r\n        if(title == null) {  }\r\n        else\r\n        {\r\n            var newEvent = {};\r\n            newEvent = {\r\n                id: this.state.calendarEvents.length + 1,\r\n                title: title,\r\n                start: this.state.selectedDay ? this.state.selectedDay.date : new Date(),\r\n                className: 'bg-primary'\r\n            };\r\n            this.setState({\r\n                calendarEvents: this.state.calendarEvents.concat(newEvent),\r\n                selectedDay: null\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"page-content\">\r\n                    <Container fluid>\r\n\r\n                    <Breadcrumbs title=\"Calendar\" breadcrumbItems={this.state.breadcrumbItems} />\r\n                        \r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <Card>\r\n                                    <CardBody>\r\n                                        <FullCalendar\r\n                                            defaultView=\"dayGridMonth\"\r\n                                            plugins={[BootstrapTheme, dayGridPlugin, interactionPlugin ]}\r\n                                            handleWindowResize={true}\r\n                                            themeSystem=\"bootstrap\"\r\n                                            header={{\r\n                                            left: \"prev,next today\",\r\n                                            center: \"title\",\r\n                                            right: \"dayGridMonth,dayGridWeek,dayGridDay\"\r\n                                            }}\r\n                                            dateClick={this.handleDateClick}\r\n                                            editable={true}\r\n                                            droppable={true}\r\n                                            eventLimit={true}\r\n                                            selectable={true}\r\n                                            events={this.state.calendarEvents}\r\n                                        />\r\n    \r\n                                        <div style={{clear : \"both\"}}></div>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        \r\n                    </Container>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}