{"ast":null,"code":"import _objectSpread from\"/Users/tanmaymoharana/Documents/projects/industrial/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{CHECK_LOGIN,LOGIN_USER_SUCCESSFUL,API_ERROR,LOGOUT_USER,LOGOUT_USER_SUCCESS}from'./actionTypes';var initialState={loginError:\"aaa\",message:null,loading:false};var login=function login(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case CHECK_LOGIN:state=_objectSpread(_objectSpread({},state),{},{loading:true});break;case LOGIN_USER_SUCCESSFUL:state=_objectSpread(_objectSpread({},state),{},{loading:false});break;case LOGOUT_USER:state=_objectSpread({},state);break;case LOGOUT_USER_SUCCESS:state=_objectSpread({},state);break;case API_ERROR:state=_objectSpread(_objectSpread({},state),{},{loading:false,loginError:action.payload});break;default:state=_objectSpread({},state);break;}return state;};export default login;","map":{"version":3,"sources":["/Users/tanmaymoharana/Documents/projects/industrial/dashboard/src/store/auth/login/reducer.js"],"names":["CHECK_LOGIN","LOGIN_USER_SUCCESSFUL","API_ERROR","LOGOUT_USER","LOGOUT_USER_SUCCESS","initialState","loginError","message","loading","login","state","action","type","payload"],"mappings":"mLAAA,OAASA,WAAT,CAAsBC,qBAAtB,CAA6CC,SAA7C,CAAwDC,WAAxD,CAAqEC,mBAArE,KAAgG,eAAhG,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,UAAU,CAAE,KADK,CACEC,OAAO,CAAE,IADX,CACiBC,OAAO,CAAE,KAD1B,CAArB,CAIA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBL,YAAyB,IAAXM,CAAAA,MAAW,2CAC5C,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKZ,CAAAA,WAAL,CACIU,KAAK,gCACEA,KADF,MAEDF,OAAO,CAAE,IAFR,EAAL,CAIA,MACJ,IAAKP,CAAAA,qBAAL,CACIS,KAAK,gCACEA,KADF,MAEDF,OAAO,CAAE,KAFR,EAAL,CAIA,MAEJ,IAAKL,CAAAA,WAAL,CACIO,KAAK,kBAAQA,KAAR,CAAL,CACA,MAEJ,IAAKN,CAAAA,mBAAL,CACIM,KAAK,kBAAQA,KAAR,CAAL,CACA,MAEJ,IAAKR,CAAAA,SAAL,CACIQ,KAAK,gCACEA,KADF,MAEDF,OAAO,CAAE,KAFR,CAGDF,UAAU,CAAEK,MAAM,CAACE,OAHlB,EAAL,CAKA,MAEJ,QACIH,KAAK,kBAAQA,KAAR,CAAL,CACA,MAhCR,CAkCA,MAAOA,CAAAA,KAAP,CACH,CApCD,CAsCA,cAAeD,CAAAA,KAAf","sourcesContent":["import { CHECK_LOGIN, LOGIN_USER_SUCCESSFUL, API_ERROR, LOGOUT_USER, LOGOUT_USER_SUCCESS } from './actionTypes';\r\n\r\nconst initialState = {\r\n    loginError: \"aaa\", message: null, loading: false\r\n}\r\n\r\nconst login = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHECK_LOGIN:\r\n            state = {\r\n                ...state,\r\n                loading: true\r\n            }\r\n            break;\r\n        case LOGIN_USER_SUCCESSFUL:\r\n            state = {\r\n                ...state,\r\n                loading: false\r\n            }\r\n            break;\r\n\r\n        case LOGOUT_USER:\r\n            state = { ...state };\r\n            break;\r\n\r\n        case LOGOUT_USER_SUCCESS:\r\n            state = { ...state };\r\n            break;\r\n            \r\n        case API_ERROR:\r\n            state = {\r\n                ...state,\r\n                loading: false,\r\n                loginError: action.payload\r\n            }\r\n            break;\r\n\r\n        default:\r\n            state = { ...state };\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default login;"]},"metadata":{},"sourceType":"module"}